{"version":3,"sources":["components/DisplayResults.js","components/Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayResults","props","hits","data","map","item","index","className","src","recipe","image","alt","label","dietLabels","length","join","parseFloat","calories","toFixed","totalTime","healthLabels","toString","Searchbox","setLastFiveSearchWords","state","searchKeyWords","indexOf","currentSearch","newArr","concat","setState","slice","fetchResults","e","preventDefault","showLoading","url","fetch","then","response","json","result","error","setCurrentSearch","target","value","componentDidMount","searchRef","current","focus","React","createRef","this","onSubmit","htmlFor","aria-labelledby","autoComplete","type","ref","id","name","placeholder","onChange","undefined","q","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4c479c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction DisplayResults(props) {\r\n    const {hits} = props.data\r\n\r\n    return (\r\n        <>\r\n            {\r\n                hits.map((item, index) => \r\n                <div className=\"item\" key={item.recipe.label+'_'+index.toString()}>\r\n                    <div><img src={item.recipe.image} alt={item.recipe.label} /></div>\r\n                    <div className=\"itemTitle\">{item.recipe.label}</div>\r\n                    <div><label>Diet</label>: {item.recipe.dietLabels.length && item.recipe.dietLabels.join(\", \")}</div> \r\n                    <div><label>Calories</label>: {parseFloat(item.recipe.calories).toFixed(2)}</div>\r\n                    <div><label>Time:</label> {item.recipe.totalTime} mins</div> \r\n                    <div><label>Health:</label> {item.recipe.healthLabels.length && item.recipe.healthLabels.join(\", \")}</div> \r\n                    <div className=\"clearFix\"></div>\r\n                </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisplayResults;","import React, { Component } from 'react';\r\nimport DisplayResults from './DisplayResults';\r\nimport './style.css';\r\nimport recipeList from \"./recipeList\";\r\n\r\nclass Searchbox extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            data : [],\r\n            error: \"\",\r\n            searchKeyWords: [],\r\n            currentSearch: \"\",\r\n            showLoading: false\r\n        }\r\n        \r\n        this.searchRef = React.createRef();\r\n    }\r\n\r\n    setLastFiveSearchWords = () => {\r\n      if(this.state.searchKeyWords.indexOf(this.state.currentSearch) === -1)\r\n      {\r\n          const newArr = this.state.searchKeyWords.concat(this.state.currentSearch)\r\n          this.setState({\r\n              //searchKeyWords: [...this.state.searchKeyWords, this.state.currentSearch].slice(-5),\r\n              searchKeyWords: newArr.slice(-5),\r\n              currentSearch: \"\"\r\n          });\r\n      }\r\n    }\r\n\r\n    fetchResults = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if(this.state.currentSearch !== \"\")\r\n        {\r\n            this.setState({\r\n                showLoading: true\r\n            })\r\n\r\n            let url = `https://api.edamam.com/search?app_id=8f735e99&app_key=a29ee0ab253b74369b34db87438541f6&to=10&q=${this.state.currentSearch}`;\r\n            fetch(url).\r\n                then(response => response.json()).then((result) => {\r\n\r\n                    this.setState({\r\n                        showLoading: false,\r\n                        data: result\r\n                    });\r\n\r\n                    this.setLastFiveSearchWords()\r\n                },\r\n                (error) => {\r\n                     this.setLastFiveSearchWords()\r\n                     this.setState({\r\n                        showLoading: false,\r\n                        error: \"Failed to fetch\",\r\n                        data: \"\"\r\n                     })\r\n                });\r\n\r\n            // this.setState({\r\n            //     showLoading: false,\r\n            //     data: recipeList\r\n            // });\r\n            // this.setLastFiveSearchWords()\r\n\r\n        } \r\n    }\r\n\r\n    setCurrentSearch = (e) => {\r\n        this.setState({\r\n            currentSearch: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.searchRef.current.focus();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {currentSearch, searchKeyWords, showLoading, error, data} = this.state\r\n\r\n        return (\r\n            <>\r\n               <form onSubmit={this.fetchResults}>\r\n                  <div className=\"searchBox\">\r\n                     <label htmlFor=\"search\">\r\n                        <input aria-labelledby=\"search\" autoComplete=\"off\" type=\"text\" ref={this.searchRef} id=\"search\" name=\"search\" placeholder=\"Search\" value={currentSearch} onChange={this.setCurrentSearch} />\r\n                     </label>\r\n                     <label htmlFor=\"searchBtn\">\r\n                        <button aria-labelledby=\"searchBtn\" id=\"searchBtn\">Search</button>\r\n                     </label>\r\n                  </div>\r\n               </form>\r\n\r\n               {showLoading && <div> Loading... </div>}\r\n\r\n               {searchKeyWords.length > 0 && \r\n               <div className=\"searchKeys\"><span> Last 5 Search Keywords: </span> {searchKeyWords.join(\", \")}</div>}\r\n\r\n               {(error !== \"\") && <div className=\"error\"> Failed to fetch </div>}\r\n\r\n               {data.hits !== undefined &&\r\n               <div>\r\n                  {data.q !== undefined && <h3 className=\"resultHead\">Search Results for <span>{data.q}</span></h3>}\r\n\r\n                  <DisplayResults data={data} />\r\n               </div>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbox;","import './App.css';\nimport Searchbox from './components/Searchbox';\nimport SearchBoxHook from './components/useHooks/SearchBoxHook';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* {BY USING CLASS COMPONENT} */}\n      <Searchbox />\n\n      {/* {BY USING HOOKS} */}\n      {/* <SearchBoxHook /> */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}